<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.1">
  <compounddef id="class_g_l_widget" kind="class" prot="public">
    <compoundname>GLWidget</compoundname>
    <includes refid="glwidget_8h" local="no">glwidget.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_g_l_widget_1adcb770901aef15e018614ecd4c380459" prot="private" static="no" mutable="no">
        <type>GLuint *</type>
        <definition>GLuint* GLWidget::textures2d</definition>
        <argsstring></argsstring>
        <name>textures2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="165" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1ab3eb315b1368ca8515d77145924c93ab" prot="private" static="no" mutable="no">
        <type>void(GLWidget::*</type>
        <definition>void(GLWidget::* GLWidget::renderingMethod)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>renderingMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function pointer to the rendering function (no return value, no arguments) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="183" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a01e1e563160757df00a219f3f5b0d109" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_fast_image" kindref="compound">FastImage</ref> * &gt;</type>
        <definition>vector&lt;FastImage*&gt; GLWidget::originalImages</definition>
        <argsstring></argsstring>
        <name>originalImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="185" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a7bbca64e643f4fb8fef581ae7fac1383" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_fast_image" kindref="compound">FastImage</ref> * &gt;</type>
        <definition>vector&lt;FastImage*&gt; GLWidget::images</definition>
        <argsstring></argsstring>
        <name>images</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="186" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a81331a466275ff125b28a6a4a02a0917" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint GLWidget::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="187" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1ac1c60e7425956b62ce9cba7cc13cab73" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint GLWidget::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="188" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a6d208652cde39ce5156d2374aa8ec2ef" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float GLWidget::xRot</definition>
        <argsstring></argsstring>
        <name>xRot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="190" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1adb8d0e571963776f4d3d3fe222abb637" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float GLWidget::yRot</definition>
        <argsstring></argsstring>
        <name>yRot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="191" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1afc8ab4c3365f7cef9a147503b5656266" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float GLWidget::zRot</definition>
        <argsstring></argsstring>
        <name>zRot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="192" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1ae0285a93d33f66a65efdccca45ec420c" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float GLWidget::xTrans</definition>
        <argsstring></argsstring>
        <name>xTrans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="194" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a24dd3e0a385edcb7daf49646bcb3f14e" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float GLWidget::yTrans</definition>
        <argsstring></argsstring>
        <name>yTrans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="195" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a02ff64f2b9280eb86dce9aa561a5d4b9" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float GLWidget::zTrans</definition>
        <argsstring></argsstring>
        <name>zTrans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="196" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a1483d141b38366b8d596d18d52c14b54" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float GLWidget::zoomFactor</definition>
        <argsstring></argsstring>
        <name>zoomFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="198" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a541d62dc2338b54523c45235425e7003" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float GLWidget::zExtent</definition>
        <argsstring></argsstring>
        <name>zExtent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="199" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a4ef0495d8426e995c2ac3edf8b907bb1" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint GLWidget::fpsFrameCount</definition>
        <argsstring></argsstring>
        <name>fpsFrameCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="202" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a9fb7fece62b92f7a0bb4167ea1e05c28" prot="private" static="no" mutable="no">
        <type>QPoint</type>
        <definition>QPoint GLWidget::lastPos</definition>
        <argsstring></argsstring>
        <name>lastPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="204" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a33750edf93b4fab8274dba01f358957f" prot="private" static="no" mutable="no">
        <type>QSharedPointer&lt; QGLShaderProgram &gt;</type>
        <definition>QSharedPointer&lt;QGLShaderProgram&gt; GLWidget::shaderProgram</definition>
        <argsstring></argsstring>
        <name>shaderProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="206" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1a187f8566aa6551c07f9fef978ac7bd85" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GLWidget::dataChanged</definition>
        <argsstring></argsstring>
        <name>dataChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="208" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_g_l_widget_1afcc905953821b1f806e7c75f9842af79" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint GLWidget::vboID</definition>
        <argsstring></argsstring>
        <name>vboID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="209" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_g_l_widget_1ab79c391c86de1ffb76f6950b49d82c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GLWidget::GLWidget</definition>
        <argsstring>(QWidget *parent=0)</argsstring>
        <name>GLWidget</name>
        <param>
          <type>QWidget *</type>
          <declname>parent</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="42" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="11" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a535192a4262b4501e5493303834f45d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GLWidget::~GLWidget</definition>
        <argsstring>()</argsstring>
        <name>~GLWidget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="43" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a9601076e0757c5fe221e28d3e9983b75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::updateImages</definition>
        <argsstring>(vector&lt; FastImage * &gt; imagesParam, uint width, uint height)</argsstring>
        <name>updateImages</name>
        <param>
          <type>vector&lt; <ref refid="class_fast_image" kindref="compound">FastImage</ref> * &gt;</type>
          <declname>imagesParam</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the image cache with new images (represented by a vector of <ref refid="class_fast_image" kindref="compound">FastImage</ref> pointers) with a given width and height.</para><para>The images must be checked for equal width and height before - the <ref refid="class_g_l_widget" kindref="compound">GLWidget</ref> class does not check them for performance reasons. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="53" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1ae0cb1922c7f58b363fe4577a8a2c5d1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::resetView</definition>
        <argsstring>()</argsstring>
        <name>resetView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets rotation, translation and zoom and re-renders the data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="64" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="63" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a68406450ab1961b48ebc786cb61b4d48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::setZExtent</definition>
        <argsstring>(float newZExtent)</argsstring>
        <name>setZExtent</name>
        <param>
          <type>float</type>
          <declname>newZExtent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the z (depth) extent of the rendered image cuboid 1.0 is the same as the maximum of with and height </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="83" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1ade3142625c1bfda0576e419b176cf8b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize GLWidget::minimumSizeHint</definition>
        <argsstring>() const </argsstring>
        <name>minimumSizeHint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="88" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a57698bc426052845b43a135a13540154" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize GLWidget::sizeHint</definition>
        <argsstring>() const </argsstring>
        <name>sizeHint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="89" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a35e6da60485a6b10fe24ac386b708071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::keyPressEvent</definition>
        <argsstring>(QKeyEvent *)</argsstring>
        <name>keyPressEvent</name>
        <param>
          <type>QKeyEvent *</type>
          <defname>event</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reacts to a key event. Key events are translated into translation commands.</para><para>All translations are absolute and not dependent on the rotation. The translation amount is dependent on the zoom factor.</para><para>Left/right arrow keys: x coordinates Up/down arrow keys: y coordinates PageUp/PageDown: z coordinates +/-: zoom </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="134" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="295" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a91b951781d524f59eccae0296fa259d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::setRenderingMethod</definition>
        <argsstring>(RenderingMethod method)</argsstring>
        <name>setRenderingMethod</name>
        <param>
          <type>RenderingMethod</type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the rendering method for this <ref refid="class_g_l_widget" kindref="compound">GLWidget</ref> and updates the screen (= re-renders the current view using the new method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="139"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_g_l_widget_1a7083404e9ab8feffb2c486f7c15308ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::setXRotation</definition>
        <argsstring>(int angle)</argsstring>
        <name>setXRotation</name>
        <param>
          <type>int</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="93" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="slot" id="class_g_l_widget_1a29012eba3cb4201f78807066f2c9dcd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::setYRotation</definition>
        <argsstring>(int angle)</argsstring>
        <name>setYRotation</name>
        <param>
          <type>int</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="94" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="slot" id="class_g_l_widget_1a6f6b4fbbcc566d999db7e53aadeba889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::setZRotation</definition>
        <argsstring>(int angle)</argsstring>
        <name>setZRotation</name>
        <param>
          <type>int</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="95" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="74" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="class_g_l_widget_1a3a557b9cd96f7b89661ceaa567c91640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::xRotationChanged</definition>
        <argsstring>(int angle)</argsstring>
        <name>xRotationChanged</name>
        <param>
          <type>int</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="98" bodyfile="/home/uli/dev/medigl/vertebra/moc_glwidget.cpp" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="signal" id="class_g_l_widget_1ad47d672d0124b995e82551a95b59badb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::yRotationChanged</definition>
        <argsstring>(int angle)</argsstring>
        <name>yRotationChanged</name>
        <param>
          <type>int</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="99" bodyfile="/home/uli/dev/medigl/vertebra/moc_glwidget.cpp" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="signal" id="class_g_l_widget_1ab2035753b19b46105020d6045ac75a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::zRotationChanged</definition>
        <argsstring>(int angle)</argsstring>
        <name>zRotationChanged</name>
        <param>
          <type>int</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="100" bodyfile="/home/uli/dev/medigl/vertebra/moc_glwidget.cpp" bodystart="110" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_g_l_widget_1a7fab13e8cc9fc0730ca54c08b2c923a7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::initializeGL</definition>
        <argsstring>()</argsstring>
        <name>initializeGL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="103" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="84" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a640b5570cb2b37724fd5b58a77339c5e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::paintGL</definition>
        <argsstring>()</argsstring>
        <name>paintGL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="104" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="144" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1ac0d2a8ecf60907a81c0d73475d851025" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::resizeGL</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>resizeGL</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="105" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="257" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1ab144cc8064c1bbf6d0ef0646ca0bd06c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::mousePressEvent</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>mousePressEvent</name>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reacts to a mouse press event. This is part of the rotation code which rotates the data when the user uses drag-and-drop </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="110" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a9043bac13d6f0a5307ea5c7f9b3caa50" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::mouseMoveEvent</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>mouseMoveEvent</name>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reacts to a mouse move event. This is part of the rotation code which rotates the data when the user uses drag-and-drop </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="115" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="274" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1ab11fb26fd97e5bf66989f072760b1617" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::wheelEvent</definition>
        <argsstring>(QWheelEvent *)</argsstring>
        <name>wheelEvent</name>
        <param>
          <type>QWheelEvent *</type>
          <defname>event</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reacts to a mouse wheel event. Mouse wheel events are translated into zoom factor changes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="120" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="369" bodyend="373"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_g_l_widget_1ac0bf15e8893cf0d67821e619bbd82f24" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::refillVBO</definition>
        <argsstring>()</argsstring>
        <name>refillVBO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a1e1d21d000d24735432063986079ea1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::normalizeAngle</definition>
        <argsstring>(int *angle)</argsstring>
        <name>normalizeAngle</name>
        <param>
          <type>int *</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="142" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="375" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a6d3976371d2c67b777243b13f0dbddfd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::incrZoomFactor</definition>
        <argsstring>(int delta)</argsstring>
        <name>incrZoomFactor</name>
        <param>
          <type>int</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="143" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="357" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a926aaf6aae026584669a9bb0b49ee8d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::renderPointCloud</definition>
        <argsstring>()</argsstring>
        <name>renderPointCloud</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rendering function; has to be called inside paintGL() when all neccessary transformations have been done. This rendering function uses the PointCloud algorithm: Each pixel is rendered as GLPoint. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="149" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="198" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a5a571f53824c68e28460d872f5bb13c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::renderLines</definition>
        <argsstring>()</argsstring>
        <name>renderLines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rendering function; has to be called inside paintGL() when all neccessary transformations have been done. Uses lines in the Z (depth) dimensions to display the data.</para><para>For this rendering method it&apos;s not neccessary to generate virtual padding images </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="157" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="220" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1a6b841d819d4161bf147562a21ab40d3b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::render2DTextures</definition>
        <argsstring>()</argsstring>
        <name>render2DTextures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rendering function; has to be called inside paintGL() when all neccessary transformations have been done. Uses 2D textures with alpha blending to display the data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="163" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.cpp" bodystart="240" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_g_l_widget_1aa081a8f5718a2aee84c9d151b3601e4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLWidget::generateFillersCPU</definition>
        <argsstring>(int num)</argsstring>
        <name>generateFillersCPU</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>VERTEBRA OpenGL widget Controls and the OpenGL IO, displays the rendered data, reacts to user events and processes images</para><para>Note that the</para><para>This class uses a function pointer to select the rendering function. This decision (which results in very complex syntax at some points) was made because using the RenderingEnum method directly was extremely slow even if using a switch. </para>    </detaileddescription>
    <location file="/home/uli/dev/medigl/vertebra/glwidget.h" line="38" bodyfile="/home/uli/dev/medigl/vertebra/glwidget.h" bodystart="37" bodyend="210"/>
    <listofallmembers>
      <member refid="class_g_l_widget_1a187f8566aa6551c07f9fef978ac7bd85" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>dataChanged</name></member>
      <member refid="class_g_l_widget_1a4ef0495d8426e995c2ac3edf8b907bb1" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>fpsFrameCount</name></member>
      <member refid="class_g_l_widget_1aa081a8f5718a2aee84c9d151b3601e4a" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>generateFillersCPU</name></member>
      <member refid="class_g_l_widget_1ab79c391c86de1ffb76f6950b49d82c0c" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>GLWidget</name></member>
      <member refid="class_g_l_widget_1ac1c60e7425956b62ce9cba7cc13cab73" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>height</name></member>
      <member refid="class_g_l_widget_1a7bbca64e643f4fb8fef581ae7fac1383" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>images</name></member>
      <member refid="class_g_l_widget_1a6d3976371d2c67b777243b13f0dbddfd" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>incrZoomFactor</name></member>
      <member refid="class_g_l_widget_1a7fab13e8cc9fc0730ca54c08b2c923a7" prot="protected" virt="non-virtual"><scope>GLWidget</scope><name>initializeGL</name></member>
      <member refid="class_g_l_widget_1a35e6da60485a6b10fe24ac386b708071" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>keyPressEvent</name></member>
      <member refid="class_g_l_widget_1a9fb7fece62b92f7a0bb4167ea1e05c28" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>lastPos</name></member>
      <member refid="class_g_l_widget_1ade3142625c1bfda0576e419b176cf8b1" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>minimumSizeHint</name></member>
      <member refid="class_g_l_widget_1a9043bac13d6f0a5307ea5c7f9b3caa50" prot="protected" virt="non-virtual"><scope>GLWidget</scope><name>mouseMoveEvent</name></member>
      <member refid="class_g_l_widget_1ab144cc8064c1bbf6d0ef0646ca0bd06c" prot="protected" virt="non-virtual"><scope>GLWidget</scope><name>mousePressEvent</name></member>
      <member refid="class_g_l_widget_1a1e1d21d000d24735432063986079ea1f" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>normalizeAngle</name></member>
      <member refid="class_g_l_widget_1a01e1e563160757df00a219f3f5b0d109" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>originalImages</name></member>
      <member refid="class_g_l_widget_1a640b5570cb2b37724fd5b58a77339c5e" prot="protected" virt="non-virtual"><scope>GLWidget</scope><name>paintGL</name></member>
      <member refid="class_g_l_widget_1ac0bf15e8893cf0d67821e619bbd82f24" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>refillVBO</name></member>
      <member refid="class_g_l_widget_1a6b841d819d4161bf147562a21ab40d3b" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>render2DTextures</name></member>
      <member refid="class_g_l_widget_1ab3eb315b1368ca8515d77145924c93ab" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>renderingMethod</name></member>
      <member refid="class_g_l_widget_1a5a571f53824c68e28460d872f5bb13c2" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>renderLines</name></member>
      <member refid="class_g_l_widget_1a926aaf6aae026584669a9bb0b49ee8d7" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>renderPointCloud</name></member>
      <member refid="class_g_l_widget_1ae0cb1922c7f58b363fe4577a8a2c5d1e" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>resetView</name></member>
      <member refid="class_g_l_widget_1ac0d2a8ecf60907a81c0d73475d851025" prot="protected" virt="non-virtual"><scope>GLWidget</scope><name>resizeGL</name></member>
      <member refid="class_g_l_widget_1a91b951781d524f59eccae0296fa259d0" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>setRenderingMethod</name></member>
      <member refid="class_g_l_widget_1a7083404e9ab8feffb2c486f7c15308ce" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>setXRotation</name></member>
      <member refid="class_g_l_widget_1a29012eba3cb4201f78807066f2c9dcd4" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>setYRotation</name></member>
      <member refid="class_g_l_widget_1a68406450ab1961b48ebc786cb61b4d48" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>setZExtent</name></member>
      <member refid="class_g_l_widget_1a6f6b4fbbcc566d999db7e53aadeba889" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>setZRotation</name></member>
      <member refid="class_g_l_widget_1a33750edf93b4fab8274dba01f358957f" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>shaderProgram</name></member>
      <member refid="class_g_l_widget_1a57698bc426052845b43a135a13540154" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>sizeHint</name></member>
      <member refid="class_g_l_widget_1adcb770901aef15e018614ecd4c380459" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>textures2d</name></member>
      <member refid="class_g_l_widget_1a9601076e0757c5fe221e28d3e9983b75" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>updateImages</name></member>
      <member refid="class_g_l_widget_1afcc905953821b1f806e7c75f9842af79" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>vboID</name></member>
      <member refid="class_g_l_widget_1ab11fb26fd97e5bf66989f072760b1617" prot="protected" virt="non-virtual"><scope>GLWidget</scope><name>wheelEvent</name></member>
      <member refid="class_g_l_widget_1a81331a466275ff125b28a6a4a02a0917" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>width</name></member>
      <member refid="class_g_l_widget_1a6d208652cde39ce5156d2374aa8ec2ef" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>xRot</name></member>
      <member refid="class_g_l_widget_1a3a557b9cd96f7b89661ceaa567c91640" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>xRotationChanged</name></member>
      <member refid="class_g_l_widget_1ae0285a93d33f66a65efdccca45ec420c" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>xTrans</name></member>
      <member refid="class_g_l_widget_1adb8d0e571963776f4d3d3fe222abb637" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>yRot</name></member>
      <member refid="class_g_l_widget_1ad47d672d0124b995e82551a95b59badb" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>yRotationChanged</name></member>
      <member refid="class_g_l_widget_1a24dd3e0a385edcb7daf49646bcb3f14e" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>yTrans</name></member>
      <member refid="class_g_l_widget_1a541d62dc2338b54523c45235425e7003" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>zExtent</name></member>
      <member refid="class_g_l_widget_1a1483d141b38366b8d596d18d52c14b54" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>zoomFactor</name></member>
      <member refid="class_g_l_widget_1afc8ab4c3365f7cef9a147503b5656266" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>zRot</name></member>
      <member refid="class_g_l_widget_1ab2035753b19b46105020d6045ac75a79" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>zRotationChanged</name></member>
      <member refid="class_g_l_widget_1a02ff64f2b9280eb86dce9aa561a5d4b9" prot="private" virt="non-virtual"><scope>GLWidget</scope><name>zTrans</name></member>
      <member refid="class_g_l_widget_1a535192a4262b4501e5493303834f45d3" prot="public" virt="non-virtual"><scope>GLWidget</scope><name>~GLWidget</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
